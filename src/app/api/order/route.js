import clientPromise from "@/lib/mongodb";

export async function POST(request) {
  console.log("üü° [API] POST /api/order –≤—ã–∑–≤–∞–Ω");

  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    console.log("üîπ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB...");
    const client = await clientPromise;
    console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ!");

    const db = client.db("sample_mflix"); // –ò–∑–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é –±–∞–∑—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const { orderDetails, username, userId } = await request.json();
    console.log("üì¶ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", { orderDetails, username, userId });

    if (!orderDetails || !username || !userId) {
      console.warn("‚ö†Ô∏è –ù–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã!");
      return Response.json({ error: "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" }, { status: 400 });
    }

    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞
    const newOrder = {
      orderDetails,
      username,
      userId,
      createdAt: new Date(),
    };

    console.log("üìù –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –±–∞–∑–µ...");
    const result = await db.collection("orders").insertOne(newOrder);
    console.log("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω —Å ID:", result.insertedId);

    return Response.json({
      message: "–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω",
      orderId: result.insertedId,
    });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–µ:", error);
    return Response.json(
      { error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö" },
      { status: 500 }
    );
  }
}
